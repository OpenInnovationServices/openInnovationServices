<% include ../partials/header %>

<section id="one">
    <div class="container">
        <input type="text" class="form-control" name="username" />
        <button id=btn>START</button>
    </div>
</section>

<section id="two" class="container" style="display:none">
    <img src="/image/telephone-1.png">
    <textarea name="comment" class="form-control" placeholder="Enter Imaginations here"></textarea>
    <div>Registration closes in <span id="time1"></span> minutes!</div>
</section>

<script>
    $('#btn').on('click', function () {
        $('#two').show('slow');
        var display1 = document.querySelector('#time1'),
            timer = new CountDownTimer(10);

        timer.onTick(format1).start();

        function format1(minutes, seconds) {
            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;
            display1.textContent = minutes + ':' + seconds;
            if(minutes == 00 && seconds == 00){
                wait(3000);
                window.location.href = "http://localhost:3000/challenges";
            }
        }
    });

    function CountDownTimer(duration, granularity) {
  this.duration = duration;
  this.granularity = granularity || 1000;
  this.tickFtns = [];
  this.running = false;
}

function wait(ms){
   var start = new Date().getTime();
   var end = start;
   while(end < start + ms) {
     end = new Date().getTime();
  }
}

CountDownTimer.prototype.start = function() {
  if (this.running) {
    return;
  }
  this.running = true;
  var start = Date.now(),
      that = this,
      diff, obj;

  (function timer() {
    diff = that.duration - (((Date.now() - start) / 1000) | 0);
    
    if (diff > 0) {
      setTimeout(timer, that.granularity);
    } else {
      diff = 0;
      that.running = false;
    }

    obj = CountDownTimer.parse(diff);
    that.tickFtns.forEach(function(ftn) {
      ftn.call(this, obj.minutes, obj.seconds);
    }, that);
  }());
};

CountDownTimer.prototype.onTick = function(ftn) {
  if (typeof ftn === 'function') {
    this.tickFtns.push(ftn);
  }
  return this;
};

CountDownTimer.prototype.expired = function() {
  return !this.running;
};

CountDownTimer.parse = function(seconds) {
  return {
    'minutes': (seconds / 60) | 0,
    'seconds': (seconds % 60) | 0
  };
};
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

<% include ../partials/footer %>